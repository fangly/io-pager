Important things here and in code flagged with XXX

0.1x
	XXX What gets documented where? Factory and base only in IO::Pager,
	or general use coverage? If the former, no duplication in subclass,
	just special method details and 'new IO::Pager::subclass' syntax?

	XXX Test output when redirected to file

	XXX Test failure to create handle (set bogus PAGER before new)

	Alter tests to cover all invocation schemes, and track each in matrix?
	      new/open each class
	      scalar vs. glob
	      non-fully qualified subclass name

	Do they all need to be documented? Or just a few:
		factory methods

		new IO::Pager::subclass for beauty since ungainly undef is
		"required" for FH, unless we could complicate code to make
		IO::Pager::new smartly use 1st arg a FH or subclass

	"3-arg open" with layer?

0.16
	XXX Test documented implicit closing when object passes out of scope;
	previously via alias of DESTROY to CLOSE, but unnice if explicit close.

	Clean-up/clarify returned object vs. filehandle?
		...(partially) done if OO is documented (.1x)

0.10
	Implement eof?
		To indicate SIGPIPE? ...handler localization difficulties (.16)

	Hijack something to return filehandle(?), child pid(!),
	but this amounts to nothing more than showing our private parts?
	Alas tied handles have no STAT method to pass child as inode

0.02	Tue Jul 15 23:24:38 EDT 2003
	Implement IO::Pager::Callback, just because it sounds cool?
